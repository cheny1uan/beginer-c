/* 信11 2351892 陈奕炫 */

/* 函数实现部分，{ }内的东西可以任意调整，目前的return 0只是一个示例，可改变 */

/* 不允许定义任何形式的外部全局、静态全局、宏定义、只读变量 */

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlen(const char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i;
    for (i = 0; str[i] != '\0'; i++) {
        ;
        }
    return i; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcat(char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    
    int i = tj_strlen(s1);
    int j = 0;
    for (; s2[j] != '\0'; i++, j++)
    {
        s1[i] = s2[j];
    }
    s1[i] = '\0';
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncat(char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i;
    int len_s1 = tj_strlen(s1);
    int len_s2 = tj_strlen(s2);
    int len_i = len;
    if (len > len_s2)
        len_i = len_s2;
    for (i = 0; i < len_i; i++) {
        s1[i + len_s1] = s2[i];
    }
    s1[len_i + len_s1] = '\0';

    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcpy(char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i;
    for (i = 0; s2[i] != '\0'; i++) {
        s1[i] = s2[i];
    }
    s1[i] = '\0';
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncpy(char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i;
    int len_s1 = tj_strlen(s1);
    int len_s2 = tj_strlen(s2);
    int len_i = len;
    if (len > len_s2)
        len_i = len_s2;
    for (i = 0; i < len_i; i++) {
        s1[i] = s2[i];
    }

    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcmp(const char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i;
    int len_s1 = tj_strlen(s1);
    int len_s2 = tj_strlen(s2);
    int len_i = len_s1;
    if (len_s1 > len_s2)
        len_i = len_s2;
    for (i = 0; i <= len_i; i++)
    {
        if (s1[i] != s2[i]) {
            return s1[i] - s2[i];
        }
    }


    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasecmp(const char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int len_s1 = tj_strlen(s1);
    int len_s2 = tj_strlen(s2);
    int len_i = len_s1;
    char ch1, ch2;
    if (len_s1 > len_s2)
        len_i = len_s2;
    for (int i = 0; i <= len_i; i++)
    {
        ch1 = s1[i];
        ch2 = s2[i];
        if (ch1 >= 'A' && ch1 <= 'Z')
            ch1 = ch1+32;
        if (ch2 >= 'A' && ch2 <= 'Z')
            ch2 = ch2 + 32;
        if (ch1 != ch2)
            return ch1 - ch2;

    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncmp(const char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int len_s1 = tj_strlen(s1);
    int len_s2 = tj_strlen(s2);

    int len_i = len_s1;
    if (len_s1 > len_s2)
        len_i = len_s2;

    if (len <= len_i) {
        len_i = len - 1;
    }

    for (int i = 0; i <= len_i; i++)
    {
        if (s1[i] != s2[i])
            return s1[i] - s2[i];
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasencmp(const char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int len_s1 = tj_strlen(s1);
    int len_s2 = tj_strlen(s2);
    int len_i = len_s1;
    char ch1, ch2;
    if (len_s1 > len_s2)
        len_i = len_s2;
    if (len <= len_i) {
        len_i = len - 1;
    }
    
    
    for (int i = 0; i <= len_i; i++)
    {
        ch1 = s1[i];
        ch2 = s2[i];
        if (ch1 >= 'A' && ch1 <= 'Z')
            ch1 = ch1 + 32;
        if (ch2 >= 'A' && ch2 <= 'Z')
            ch2 = ch2 + 32;
        if (ch1 != ch2)
            return ch1 - ch2;

    }


    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strupr(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */

    int len_i = tj_strlen(str);
    int i;
    for (i = 0; i < len_i; i++)
    {
        if (str[i] >= 'a' && str[i] <= 'z')
            str[i] -= 32;
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlwr(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int len_i = tj_strlen(str);
    int i;
    for (i = 0; i < len_i; i++)
    {
        if (str[i] >= 'A' && str[i] <= 'Z')
            str[i] += 32;
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strchr(const char str[], char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */

    int len_i = tj_strlen(str);
    int i;
    
    for (i = 0; i < len_i; i++) {
        
        if (str[i] == ch)
            return i+1;
    }

    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strstr(const char str[], const char substr[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */

    bool flag = true;
    int i, j;

    for (i = 0; i < tj_strlen(str); i++)
    {
        if (str[i] == substr[0])
        {
            for (j = 0; j < tj_strlen(substr); j++)
            {
                if (str[i + j] != substr[j])
                {
                    flag = false;
                    break;
                }
            }
            if (flag == true)
                return i + 1;
            else
                flag=true;
        }
    }

    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrchr(const char str[], const char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int len_i = tj_strlen(str);
    int i;
    for (i = len_i - 1; i >= 0; i--)
    {
        if (str[i] == ch)
            return i + 1;
    }

    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrstr(const char str[], const char substr[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    bool flag = true;
    int j = 0;
    int i = tj_strlen(str) - tj_strlen(substr);
    
    while (i >= 0) {
        if (str[i] == substr[0])
        {
            for (j = 0; j < tj_strlen(substr); j++)
            {
                if (str[i + j] != substr[j])
                {
                    flag = false;
                    break;
                }
            }
            if (flag == true)
                return i + 1;
            else
                flag = true;
        }
        i--;
    }
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrev(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */

    int mid = (tj_strlen(str) + 1) / 2;
    char ch;
    int i;
    for (i = 0; i < mid; i++)
    {
        ch = str[i];
        str[i] = str[tj_strlen(str) - i - 1];
        str[tj_strlen(str) - i - 1] = ch;
    }
    return 0; //return值可根据需要修改
}
